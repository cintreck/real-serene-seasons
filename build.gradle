plugins {
    id 'fabric-loom' version "${loom_version}"
    id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

repositories {
    maven { url = 'https://maven.fabricmc.net/' }
    maven { url = 'https://maven.shedaniel.me/' }
    maven { url = 'https://maven.terraformersmc.com/' }
    maven { url = 'https://api.modrinth.com/maven' }
    mavenCentral()
}

loom {
    splitEnvironmentSourceSets()

    mods {
        "real_serene_seasons" {
            sourceSet sourceSets.main
            sourceSet sourceSets.client
        }
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.layered {
        officialMojangMappings()
    }
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation "maven.modrinth:serene-seasons:${project.serene_seasons_version}"
    modImplementation "maven.modrinth:glitchcore:${project.glitchcore_version}"

    implementation "com.electronwill.night-config:core:${project.nightconfig_version}"
    implementation "com.electronwill.night-config:toml:${project.nightconfig_version}"
    include "com.electronwill.night-config:core:${project.nightconfig_version}"
    include "com.electronwill.night-config:toml:${project.nightconfig_version}"

    modCompileOnly "com.terraformersmc:modmenu:${project.modmenu_version}"
    modCompileOnly "me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}"
    // For local testing, uncomment to open the config UI without installing manually:
    // modRuntimeOnly "com.terraformersmc:modmenu:${project.modmenu_version}"
    // modRuntimeOnly "me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}"
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": inputs.properties.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 21
}

java {
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21

    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

jar {
    inputs.property "archivesName", project.base.archivesName

    from("LICENSE") {
        rename { "${it}_${inputs.properties.archivesName}" }
    }
}

publishing {
    publications {
        create("mavenJava", MavenPublication) {
            artifactId = project.archives_base_name
            from components.java
        }
    }

    repositories {
    }
}
